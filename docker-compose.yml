services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: support-bot-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - GROQ_API_KEY=${GROQ_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - CORS_ORIGINS=["http://localhost:3000"]
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./backend/requirements.txt:/app/requirements.txt:ro
    networks:
      - support-bot-network
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: support-bot-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
      - BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_APP_NAME=Support Chatbot
      - NEXT_PUBLIC_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - support-bot-network
    depends_on:
      - backend
    restart: unless-stopped
    command: ["npm", "run", "dev"]

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: support-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - support-bot-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  support-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16